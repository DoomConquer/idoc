<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/task  http://www.springframework.org/schema/task/spring-task-3.0.xsd ">

	<description>Spring公共配置 </description>
	<import resource="classpath:dataSource.xml" />
	<import resource="classpath:spring-shiro.xml" />
	
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.idoc">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 扫描定时任务jar包里面的标注 -->
	<context:component-scan base-package="com.netease.cron">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSourceMysql" /> </bean>

	<!-- for aop annotation -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	
	<!-- nos相关bean配置    start -->
	<bean id="ecomTransferManager" class="org.springframework.aop.framework.ProxyFactoryBean">  
      <property name="proxyInterfaces">
          <value>com.idoc.nostransfer.AsyncEcomTransferManager</value>  
      </property>
      <property name="target">  
          <ref local="asyncEcomTransferManager" />   
      </property>
      <property name="interceptorNames">  
          <list>  
              <value>ecomTransferManagerInterceptor</value>  
          </list>  
      </property>  
    </bean>  
    <bean id="ecomTransferManagerInterceptor" class="com.idoc.nostransfer.interceptor.EcomTransferManagerInterceptor">
    </bean>
    <bean id="asyncEcomTransferManager" class="com.idoc.nostransfer.impl.AsyncEcomTransferManagerImpl" init-method="init">
    	<!-- Access key -->
    	<property name="accessKey" value="${accessKey}"></property>
    	<!-- Secret key -->
    	<property name="secretKey" value="${secretKey}"></property>
    	<!-- The minimum part size for upload parts. default is 5M -->
    	<property name="minimumUploadPartSize" value="${minimumUploadPartSize}"></property>
    	<!-- The size threshold, in bytes, for when to use multipart uploads. Uploads over this size will automatically use a multipart upload strategy, while uploads smaller than this threshold will use a single connection to upload the whole object. default is 16M -->
    	<property name="multipartUploadThreshold" value="${multipartUploadThreshold}"></property>
    	<!-- There are three bucketName: 1)ecomtest; 2)ecomprivate; 3)ecom; 
    		"ecomtest" reserved for test data, 
    		"ecomprivate" reserved for private online data which can only be accessed by api, 
    		"ecom" reserved for public online data which can be accessed by api and also http://ecom.nos.netease.com/${key} -->
    	<property name="bucketName" value="${bucketNamePublic}"></property>
    	<!-- project name such as caipiao or baoxian -->
    	<property name="groupName" value="case"></property>
    	<!-- thread pool configuration -->
    	<property name="corePoolSize" value="20"/>     
	    <property name="maxPoolSize" value="50"/>
	    <property name="keepAliveSeconds" value ="300"/>      
	    <property name="queueCapacity" value="100"/>  
    </bean>
	<!-- nos相关bean配置    end -->
	
	<!-- 任务执行器 -->  
	<task:executor id="executor" pool-size="10"/>
	
	<!--开启注解调度支持 @Async @Scheduled-->  
	<task:annotation-driven executor="executor" proxy-target-class="true"/>
	
	<context:property-placeholder location="classpath:db.properties,classpath:nos.properties" />

	<!-- <bean id="sessionFilter" class="com.idoc.filter.SessionFilter"></bean> -->
	
	<!-- 用于spring MVC上传文件 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
</beans>